version: '3'
services:
  appd_machine:
    build:
      context: .
      dockerfile: machine_with_extension/machine-Dockerfile
    container_name: machine_agent
    hostname: machine_agent
    #platform: linux/amd64

    #shouldn't need any env variables for this since controller info
    #volumes:
      #- /:/hostroot:ro
      #- /var/run/docker.sock:/var/run/docker.sock

  kafka1:
    build:
      dockerfile: kafka-broker-dockerfile
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "9099:9099"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka1:29092,CONTROLLER://kafka1:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:29092,EXTERNAL://host.docker.internal:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      BOOTSTRAP_PORT: '9092'
      APPDYNAMICS_AGENT_APPLICATION_NAME: 'BGD_KafkaCluster_Test'
      APPDYNAMICS_AGENT_TIER_NAME: 'KafkaBrokers'
      APPDYNAMICS_AGENT_ACCOUNT_NAME: 'amer-ps-sandbox'
      APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY: 'ii7d3di3aco5'
      APPDYNAMICS_CONTROLLER_HOST_NAME: 'amer-ps-sandbox.saas.appdynamics.com'
      APPDYNAMICS_CONTROLLER_PORT: '443'
      APPDYNAMICS_CONTROLLER_SSL_ENABLED: 'true'
      APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME: 'true'
      #APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME_PREFIX: 'KafkaNode'
      APPDYNAMICS_AGENT_NODE_NAME: 'KafkaNode1'
      KAFKA_OPTS: '-javaagent:/opt/appdynamics/javaagent.jar'
      KAFKA_JMX_PORT: '9099'
      KAFKA_JMX_HOSTNAME: 'kafka1'

  kafka2:
    build:
      dockerfile: kafka-broker-dockerfile
    container_name: kafka2
    hostname: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka2:29092,CONTROLLER://kafka2:29093,EXTERNAL://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka2:29092,EXTERNAL://host.docker.internal:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      BOOTSTRAP_PORT: '9093'
      APPDYNAMICS_AGENT_APPLICATION_NAME: 'BGD_KafkaCluster_Test'
      APPDYNAMICS_AGENT_TIER_NAME: 'KafkaBrokers'
      APPDYNAMICS_AGENT_ACCOUNT_NAME: 'amer-ps-sandbox'
      APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY: 'ii7d3di3aco5'
      APPDYNAMICS_CONTROLLER_HOST_NAME: 'amer-ps-sandbox.saas.appdynamics.com'
      APPDYNAMICS_CONTROLLER_PORT: '443'
      APPDYNAMICS_CONTROLLER_SSL_ENABLED: 'true'
      APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME: 'true'
      #APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME_PREFIX: 'KafkaNode'
      APPDYNAMICS_AGENT_NODE_NAME: 'KafkaNode2'
      KAFKA_OPTS: '-javaagent:/opt/appdynamics/javaagent.jar'

  kafka3:
    build:
      dockerfile: kafka-broker-dockerfile
    container_name: kafka3
    hostname: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka3:29092,CONTROLLER://kafka3:29093,EXTERNAL://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka3:29092,EXTERNAL://host.docker.internal:9094'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      BOOTSTRAP_PORT: '9094'
      APPDYNAMICS_AGENT_APPLICATION_NAME: 'BGD_KafkaCluster_Test'
      APPDYNAMICS_AGENT_TIER_NAME: 'KafkaBrokers'
      APPDYNAMICS_AGENT_ACCOUNT_NAME: 'amer-ps-sandbox'
      APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY: 'ii7d3di3aco5'
      APPDYNAMICS_CONTROLLER_HOST_NAME: 'amer-ps-sandbox.saas.appdynamics.com'
      APPDYNAMICS_CONTROLLER_PORT: '443'
      APPDYNAMICS_CONTROLLER_SSL_ENABLED: 'true'
      APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME: 'true'
      #APPDYNAMICS_JAVA_AGENT_REUSE_NODE_NAME_PREFIX: 'KafkaNode'
      APPDYNAMICS_AGENT_NODE_NAME: 'KafkaNode3'
      KAFKA_OPTS: '-javaagent:/opt/appdynamics/javaagent.jar'

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka1:29092,kafka2:29092,kafka3:29092'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
    depends_on:
      - kafka1
      - kafka2
      - kafka3

networks:
  default:
    name: kafkakraft-network
    external: true