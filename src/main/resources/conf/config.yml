#This will populate the metrics in all the tiers, under this path(not recommended)
#metricPrefix: "Custom metrics|Kafka"

#The following prefix will populate the metrics under respective tiers
metricPrefix: "Server|Component:<Tier-ID>|Custom Metrics|Kafka"


# Add your Kafka Instances below:
servers:
    - serviceUrl: "service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi"
      host: ""
      port: ""
      username: ""
      password: ""
      encryptedPassword: ""
      displayName: "Local Kafka Server"
      useSsl: false


 #Provide the encryption key for the encrypted password
encryptionKey: ""


 #Configure this section only if useSsl is set to true in any of the servers in the above section

connection:
    socketTimeout: 3000
    connectTimeout: 1000
    sslProtocol: "TLSv1.2"
    sslTrustStorePath: ""
    sslTrustStorePassword: ""
    sslTrustStoreEncryptedPassword: ""

  #key store details for mutual auth on ssl
    sslKeyStorePath: ""
    sslKeyStorePassword: ""
    sslKeyStoreEncryptedPassword: ""

# Set the following flag to true if you want to use the certs that are provided by default JDK
    useDefaultSslConnectionFactory: false

# Each Kafka server needs 1 thread each, so please configure this according to the number of servers you are monitoring
numberOfThreads: 10

# The configuration of different metrics from all mbeans exposed by Kafka server
mbeans:

# Each "objectName" is fully qualified path of the object of the Kafka server
# For example "kafka.server:type=ReplicaManager,*" will return all objects nested under ReplicaManager type
# Each of the entries in the "metrics" section is an attribute of the objectName under which it's listed

    - objectName: "kafka.server:type=BrokerTopicMetrics,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

    - objectName: "kafka.server:type=DelayedFetchMetrics,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=KafkaRequestHandlerPool,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=IsrExpandsPerSec"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=IsrShrinksPerSec"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=SessionExpireListener,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=RequestMetrics,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.controller:type=ControllerStats,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=DelayedOperationPurgatory,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaFetcherManager,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=LeaderCount"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=PartitionCount"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=Processor,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=RequestChannel,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=SocketServer,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=KafkaServer,name=BrokerState"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

#JVM Metrics
    - objectName: "java.lang:type=Memory"
      metrics:
           - HeapMemoryUsage.committed:
              alias: "Heap Memory Usage | Committed"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - HeapMemoryUsage.max:
              alias: "Heap Memory Usage | Max"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - HeapMemoryUsage.used:
              alias: "Non Heap Memory Usage | Used"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - NonHeapMemoryUsage.committed:
              alias: "Non Heap Memory Usage | Committed"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - NonHeapMemoryUsage.used:
              alias: "Non Heap Memory Usage | Used"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"
