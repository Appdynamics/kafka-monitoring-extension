metricPrefix: "Server|Component:<<Tier-Name>[or]<Tier-ID>>|Custom Metrics|Kafka"

 # Add your Kafka Instances below:

servers:
    - serviceUrl: "service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi"
      host: ""
      port: ""
      username: ""
      password: ""
      encryptedPassword: ""
      displayName: "Local Kafka Server"
      useSsl: false

 #Provide the encryption key for the password
encryptionKey: ""

 #Configure this section only if useSSL is true.
connection:
    socketTimeout: 3000
    connectTimeout: 1000
    sslProtocols: ["TLSv1.2"]
    sslCertCheckEnabled: false
    sslVerifyHostname: false
    sslCipherSuites: "[]"
    sslTrustStorePath: ""
    sslTrustStorePassword: ""
    sslTrustStoreEncryptedPassword: ""


  #key store details for mutual auth on ssl
    sslKeyStorePath: ""
    sslKeyStorePassword: ""
    sslKeyStoreEncryptedPassword: ""

# Set the following flag to true if you want to use the certs in the JDK
# Set this to false if you want to use your own certs
    useDefaultSslConnectionFactory: true

# number of concurrent tasks.
# This doesn't need to be changed unless many instances are configured
# @todo: explain this field
numberOfThreads: 10

# The configuration of different metrics from various mbeans of Kafka server
# For most cases, the mbean configuration does not need to be changed.
mbeans:

#@todo: compare actual with output values
    - objectName: "kafka.server:type=BrokerTopicMetrics,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

    - objectName: "kafka.server:type=DelayedFetchMetrics,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=KafkaRequestHandlerPool,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=IsrExpandsPerSec"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=IsrShrinksPerSec"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=SessionExpireListener,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=RequestMetrics,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.controller:type=ControllerStats,*"
      metrics:
          - Count:
             alias: "Count"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

          - MeanRate:
             alias: "Mean Rate"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=DelayedOperationPurgatory,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaFetcherManager,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=LeaderCount"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=PartitionCount"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=Processor,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=RequestChannel,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.network:type=SocketServer,*"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"
    - objectName: "kafka.server:type=KafkaServer,name=BrokerState"
      metrics:
          - Value:
             alias: "Value"
             multiplier: ""
             delta: "false"
             aggregationType: "AVERAGE"
             timeRollUpType: "AVERAGE"
             clusterRollUpType: "INDIVIDUAL"

#JVM Metrics
    - objectName: "java.lang:type=Memory"
      metrics:
           - HeapMemoryUsage.committed:
              alias: "Heap Memory Usage | Committed"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - HeapMemoryUsage.max:
              alias: "Heap Memory Usage | Max"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - HeapMemoryUsage.used:
              alias: "Non Heap Memory Usage | Used"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

           - NonHeapMemoryUsage.committed:
              alias: "Non Heap Memory Usage | Committed"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"

#           - NonHeapMemoryUsage.max:
#              alias: " Non Heap Memory Usage | Max"
#              multiplier: ""
#              delta: "false"
#              aggregationType: "AVERAGE"
#              timeRollUpType: "AVERAGE"
#              clusterRollUpType: "INDIVIDUAL"

           - NonHeapMemoryUsage.used:
              alias: "Non Heap Memory Usage | Used"
              multiplier: ""
              delta: "false"
              aggregationType: "AVERAGE"
              timeRollUpType: "AVERAGE"
              clusterRollUpType: "INDIVIDUAL"
